    Prop cube = {0};
    cube.pos = (Vector3){0, 10, 0};
    cube.size = (Vector3){10, 10, 10};
    cube.mesh = GenMeshCube(cube.size.x, cube.size.y, cube.size.z);
    cube.model = LoadModelFromMesh(cube.mesh);
    cube.rotate = false;
    cube.bounce = true;

    props[0] = cube;

    Prop static_cube = {0};
    static_cube.pos = (Vector3){35, 10, 0};
    static_cube.size = (Vector3){10, 10, 10};
    static_cube.mesh = GenMeshCube(10, 10, 10);
    static_cube.model = LoadModelFromMesh(static_cube.mesh);
    static_cube.rotate = true;
    static_cube.bounce = false;

    props[1] = static_cube;

    Prop third_cube = {0};
    third_cube.pos = (Vector3){70, 10, 0};
    third_cube.size = (Vector3){10, 10, 10};
    third_cube.mesh = GenMeshCube(third_cube.size.x, third_cube.size.y, third_cube.size.z);
    third_cube.model = LoadModelFromMesh(third_cube.mesh);
    third_cube.rotate = true;
    third_cube.bounce = true;

    props[2] = third_cube;

    Prop test = {0};
    test.pos = (Vector3){110, 10, 0};
    test.size = (Vector3){5, 5, 10};
    test.mesh = GenMeshSphere(test.size.x, 5, test.size.z);
    test.model = LoadModelFromMesh(test.mesh);
    test.rotate = true;
    test.bounce = true;

    props[3] = test;

    Prop cone = {0};
    cone.pos = (Vector3){147, 10, 0};
    cone.size = (Vector3){5, 10, 5};
    cone.mesh = GenMeshCone(cone.size.x, cone.size.y, cone.size.z);
    cone.model = LoadModelFromMesh(cone.mesh);
    cone.rotate = true;
    cone.bounce = true;

    props[4] = cone;

    Prop cylinder = {0};
    cylinder.pos = (Vector3){184, 10, 0};
    cylinder.size = (Vector3){5, 10, 5};
    cylinder.mesh = GenMeshCylinder(cylinder.size.x, cylinder.size.y, cylinder.size.z);
    cylinder.model = LoadModelFromMesh(cylinder.mesh);
    cylinder.rotate = true;
    cylinder.bounce = true;

    props[5] = cylinder;

